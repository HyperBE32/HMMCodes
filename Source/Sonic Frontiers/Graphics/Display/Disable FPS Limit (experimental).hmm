Patch "Disable FPS Limit (experimental)" in "Graphics/Display" by "NM & M&M" does 
/*
Disables the framerate limiter, allowing the game to run above its targeted 30/60 FPS limit.

Known issues;
- The game speed can fluctuate.
- The final QTE for Wyvern takes a long time to show up.
- The falling platforms in Cyber Space levels 2-5, 2-7, and 3-3 will activate more quickly.
- The spawn point in Cyber Space 4-3 will throw you into an invisible wall.
- The light dash may disconnect from the path in some cases.
*/
{
    /*
        At the moment, this is the best method I have found for uncapping FPS.
        There are **most likely** much better ways of removing the FPS cap, and there is definitely room for improvement within this script.
        This script utilizes two steps to eliminate the cap, all of which will be outlined below.
    */

    /*
        Frontiers seemingly utilizes a sleep function when limiting FPS, and so we must first prevent that function from being called.
        By NOPing these opcodes and not changing anything else, however, the game will speed up.
    */
    WriteNop
    (
        /* 0x140BB9FB0 */
        ScanSignature
        (
            "\xE8\x00\x00\x00\x00\x48\x8D\x4C\x24\x00\xE8\x00\x00\x00\x00\x48\x8B\x4C\x24\x00\x48\x8B\x43\x20",
            "x????xxxx?x????xxxx?xxxx"
        ),

        5
    );

    /*
        The change in speed is seemingly caused by the cap not being in sync with the current FPS. To fix this, we must first uncap the value of a current FPS address.
        The cap is controlled by the opcode "cmova rax, rdi," where RAX is the calculated current FPS and RDI is the user's set FPS cap. To remove this, we will be scanning for the opcode before it.
        From 0x140BBA081 to 0x140BBA08A, there are 15 bytes. This will allow us to successfully write the hook, which is 14 bytes long.
    */
    WriteAsmHook
    (
        /*
            To get rid of the opcode which enforces the cap, we simply do not include it. We can also remove "comiss xmm1, dword ptr [rdi]," which invokes the comparison.
            With the current FPS address' value uncapped (EAX), we can now write it to the FPS cap address, which is stored in RDI. This will sync the FPS cap with the actual FPS, fixing the speedup issue.
        */
        @"
            mov eax, dword ptr [rax]
            mov dword ptr [rbx+00000144h], eax
            mov dword ptr [rdi], eax
        ",

        /* 0x140BBA081 */
        ScanSignature
        (
            "\x0F\x2F\x0F\x48\x0F\x47\xC7\x8B\x00\x89\x83\x00\x00\x00\x00",
            "xxxxxxxxxxx????"
        ),

        HookBehavior.Replace
    );

    /*
        This removes the framerate limiting code for cutscenes.
    */
    long instrAddr = ScanSignature
    (
        /* 0x140126D90 */
        "\x0F\xB7\x88\x00\x00\x00\x00\x66\xC1\xE9\x0E\xF6\xC1\x01\x74\x23\x48\x8B\x05\x00\x00\x00\x00\xF3\x0F\x10\x0D\x00\x00\x00\x00\xC6\x40\x10\x01\x48\x8B\x0D\x00\x00\x00\x00\x48\x83\xC4\x28\xE9\x00\x00\x00\x00",
        "xxx????xxxxxxxxxxxx????xxxx????xxxxxxx????xxxxx????"
    );

    if (instrAddr != 0)
        WriteProtected<byte>(instrAddr, 0xEB, 0x31);

    /*
        Frontiers limits the monitor refresh rate to 60hz and forces VSync when in fullscreen.
        To prevent the game from doing this, we set both of these bytes to 0.
    */
    instrAddr = ScanSignature
    (
        /* 0x140F4198E */
        "\xC7\x45\xF8\x3C\x00\x00\x00\xC7\x45\xFC\x01\x00\x00\x00\x41\x8B\x04\x24\x41\x0F\xB6\x4C\x24\x14\x41\x0F\xB6\x7C\x24\x1C\x89\x45\xF0\x41\x8B\x44\x24\x04\x89\x45\xF4\xE8\xCC\xCC\xCC\xCC\x40\x84\xFF\x74\x05\x8B\x40\x18\xEB\x03",
        "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx????xxxxxxxxxx"
    );

    WriteProtected<byte>(instrAddr + 3, 0);
    WriteProtected<byte>(instrAddr + 10, 0);
}


